### ✅ MLOps Pipeline for Phone Price Prediction API

---

### 1. Develop

- [x] Cleaned & preprocessed dataset
- [x] Train model (LGBMRegressor) with log(price)
- [x] Save model: 
  - `best_lgbm_regressor.joblib`
  - `scaler.joblib`
  - `feature_columns.joblib`
- [x] Build FastAPI app with:
  - `/predict` endpoint
  - Pydantic schema
  - Input preprocessing

🆕 MLflow:
- [x] Log experiment details (params, metrics, model artifacts)
- [x] Set up MLflow Tracking URI (localhost or remote)
- [x] Set up experiment name: `PhonePrice-Inference`

---

### 🐳 2. Docker

- [x] Dockerize FastAPI app with production-ready Dockerfile
- [x] Include model artifacts in Docker image
- [x] Run container locally: `docker run -p 8000:8000 phone-price-api`
- [x] Validate `/docs` and `/predict`

🆕 MLflow:
- [x] Ensure MLflow runs inside container (or connect to external MLflow Tracking Server)

---

### ☁️ 3. Infrastructure (GCP + IaC)

- [ ] Use Terraform to provision:
  - GCE Instance (or GKE Cluster)
  - Cloud Storage (optional for storing artifacts)
- [ ] Ansible to install Docker + dependencies
- [ ] Set up Firewall rules (port 8000, 5000 for MLflow)

---

### 🔁 4. CI/CD

- [ ] GitHub Actions or Jenkins pipeline:
  - Linting, Testing
  - Docker build & push to GCR
  - Deploy container to GCP
- [ ] Helm chart (for GKE deployment)

---

### 📊 5. Monitoring & Logging

- [ ] Prometheus + Grafana (basic request metrics)
- [ ] Logging via GCP Logs or custom logging handler

---

### 🎯 6. MLflow Integration (Experiment Tracking)

- [x] Log model training parameters (learning_rate, n_estimators, etc.)
- [x] Log metrics (MAE, RMSE)
- [x] Log model artifacts (joblib files)
- [x] Track inference events (request time, prediction result)
- [ ] (Optional) Register model to MLflow Model Registry
- [ ] (Optional) Serve model via `mlflow models serve`

---

✅ Status: LOCAL TEST PASSED  
🔜 Next: Deploy with Terraform & connect external MLflow server (or use GCP Bucket backend)

